<cfcomponent output="false">	<cfscript>		this.event_cache_suffix = "";		this.prehandler_only 	= "";		this.prehandler_except 	= "";		this.posthandler_only 	= "";		this.posthandler_except = "";		this.aroundHandler_only = "";		this.aroundHandler_except = "";				/* HTTP Methods Allowed for actions. */		/* Ex: this.allowedMethods = {delete='POST,DELETE',index='GET'} */		this.allowedMethods = structnew();	</cfscript><!----------------------------------------- IMPLICIT EVENTS ------------------------------------------>
	<!--- UNCOMMENT HANDLER IMPLICIT EVENTS	<!--- preHandler --->	<cffunction name="preHandler" returntype="void" output="false" hint="Executes before any event in this handler">		<cfargument name="event">		<cfargument name="action" hint="The intercepted action"/>		<cfargument name="eventArguments" hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();		</cfscript>	</cffunction>	<!--- postHandler --->	<cffunction name="postHandler" returntype="void" output="false" hint="Executes after any event in this handler">		<cfargument name="event">		<cfargument name="action" 			hint="The intercepted action"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();		</cfscript>	</cffunction>		<!--- aroundHandler --->	<cffunction name="aroundHandler" returntype="void" output="false" hint="Executes around any event in this handler">		<cfargument name="event">		<cfargument name="targetAction" 	hint="The intercepted action UDF method"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();			// process targeted action			argument.targetAction(event);		</cfscript>	</cffunction>	<!--- onMissingAction --->	<cffunction name="onMissingAction" returntype="void" output="false" hint="Executes if a request action (method) is not found in this handler">		<cfargument name="event" >		<cfargument name="missingAction" 	hint="The requested action string"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>			var rc = event.getCollection();		</cfscript>	</cffunction>		<!--- onError --->	<cffunction name="onError" output="false" hint="Executes if ANY action causes an exception">		<cfargument name="event">		<cfargument name="faultAction" 		hint="The action that caused the error"/>		<cfargument name="exception"  		hint="The exception structure"/>		<cfargument name="eventArguments" 	hint="The event arguments an event is executed with (if any)"/>		<cfscript>						</cfscript>	</cffunction>	---><!------------------------------------------- PUBLIC EVENTS ------------------------------------------>			<!---injecting and making my models avaiable for use anywhere in this cfc--->	<cfproperty name="user" inject="model:user" >	<cfproperty name="project" inject="model:project" >		<!--- Default Action --->	<cffunction name="index" returntype="void" output="false" hint="My main event">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<!--- rc is a collection of variables able to be used, sort of like session variables. --->				<!----Loading in the user model		<cfset user = populateModel("User")>--->		<!---First, check to see if there's a user still logged in.--->					<cfif getPlugin("applicationstorage").exists("loggedin")>			<cfset rc.doesitexist = "Exists">		<cfelse>			<!---if a variable called loggedin doesn't exist, make one --->			<cfset rc.doesitexist = "Doesn't Exist">			<cfset getPlugin("applicationstorage").setVar("loggedin", 0)>		</cfif>					<cfset rc.appstorage = getPlugin("applicationstorage").getStorage()>				<cfset loggedin = getPlugin("applicationstorage").getVar("loggedin")>						<cfif loggedin == 1>			<!---If there is a user still logged in, take them to their profile page--->			<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>			<cfset this.loadProfile(event)>		<cfelse>			<!---If there is no user logged in, take them to the regular landing page --->			<cfset rc.pageTitle = "Hood - Online web portfolio hosting and sharing at your fingertips">			<cfset rc.message = "Welcome to ColdBox!">			<cfset event.setView("landing")>		</cfif>					</cffunction>	<!--- Do Something Action --->	<cffunction name="loginUser" returntype="void" output="false" hint="This is what gets called during the login attempt">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>				<!---Taking the username and password and checking them--->			<cfset loginSuccessObj = user.checkAndGetUser(rc.username, rc.password)>		<!---Running the if--->		<cfif loginSuccessObj.isLoggedIn is 0>			<!---If the loginSuccessBoolean is 0, the login failed--->			<cfset getPlugin("messagebox").setMessage("error","Sorry, either your username or password is incorrect.")>			<cfset rc.pageTitle = "Hood - Online web portfolio hosting and sharing at your fingertips">			<cfset rc.message = "Sorry, either your username or password is incorrect.">			<cfset event.setView("landing")>		<cfelse>			<!---if the login is successful and authorized, grab that users information--->			<cfset getPlugin("applicationstorage").setVar("loggedin", 1)>			<cfset getPlugin("applicationstorage").setVar("currentuser", loginSuccessObj.returnedUser)>			<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>			<cfset this.loadProfile(event)>						</cfif>					<cfset rc.appstorage = getPlugin("applicationstorage").getStorage()>				<!---<cfset setNextEvent("general.index")>--->	</cffunction>			<cffunction name="signUpUser" returnType="void" output="false" hint="This is the addUser Function to add a user to the database">       <cfargument name="event" required="true">       <cfset var rc = event.getCollection()>              <!---User upload uploads three versions of the file and returns a filepath obj --->       <cfset profilePicPath = user.uploadForAvatar(rc.Filedata)>              <cfset newUserObj = {      		"username" = rc.username,      		"password" = rc.password,      		"email" = rc.email,      		"avatar" = profilePicPath      }>      	      <cfset user.addNewUser(newUserObj)>      <!--- After the user has been added to the database, then log that new user in--->      <cfset rc.message = "Welcome!">      <cfset this.loginUser(event)>       	   </cffunction>	<cffunction name="loadProject" returntype="void" output="false" hint="This function is used to load projects.">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<!--- rc is a collection of variables able to be used, sort of like session variables. --->		<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>				<cfset rc.pageTitle = "Hood - " & #rc.currentUser.username# & "'s Project Listings">		<cfset rc.message = "Welcome to ColdBox!">					<!--- First, get the project that was clicked on. The id needed will be in the URL--->		<cfset rc.selectedProject = project.getSingleProject(Url.projectid)>						<cfset event.setView("projectpage")>			</cffunction>			<cffunction name="loadProfile" returntype="void" output="false" hint="This function is used to load the profile page.">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>		<cfset rc.pageTitle = "Hood - " & #rc.currentUser.username# & "'s Profile">		<cfset rc.message = "Welcome back to your profile page!">				<!---Get all of the current user's projects so they can be looped through --->		<cfset rc.returnedProjects = project.getProjectsByUser(#rc.currentUser.userId#)>				<!--- Now for every project, get its screenshots as well'--->		<cfset rc.screenArr = ArrayNew(1)>		<cfloop query="rc.returnedProjects">			<cfset data = project.getScreenshots(#rc.returnedProjects.projectId#)>			<cfset Arrayappend(#rc.screenArr#, data)>		</cfloop>				<!---All this data is now saved in the rc, so load the profile--->		<cfset event.setView("profile")>				</cffunction>		<cffunction name="editProfilePage" returntype="void" output="false" hint="This function is used to load the profile page.">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>		<cfset rc.pageTitle = "Hood - " & #rc.currentUser.username# & "'s Profile">		<cfset rc.message = "Welcome back to your profile page!">				<!---Get all of the current user's projects so they can be looped through --->		<cfset rc.returnedProjects = project.getProjectsByUser(#rc.currentUser.userId#)>				<!--- Now for every project, get its screenshots as well'--->		<cfset rc.screenArr = ArrayNew(1)>		<cfloop query="rc.returnedProjects">			<cfset data = project.getScreenshots(#rc.returnedProjects.projectId#)>			<cfset Arrayappend(#rc.screenArr#, data)>		</cfloop>				<!---All this data is now saved in the rc, so load the profile--->		<cfset event.setView("editprofile")>				</cffunction>		<cffunction name="deleteUserProfile" returntype="void" output="false" hint="This function is used to load the profile page.">			<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>		<cfset rc.pageTitle = "Hood - Delete " & #rc.currentUser.username# & "'s Profile">		<cfset rc.message = "User deleted !">				<!---<cfset user.deleteUser(#rc.currentUser.userId#)>--->				<!---Logging user out after they delete their user--->		<cfset this.logout(event)>				</cffunction>			<cffunction name="editProfileSubmit" returntype="void" output="false" hint="This function is used to load the profile page.">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>		<cfset rc.pageTitle = "Hood - " & #rc.currentUser.username# & "'s Profile">		<cfset rc.message = "Welcome back to your profile page!">				<!---Take the submitted form data and save it into an object --->		<cfset editedUserObj = {			"email" = rc.email,			"firstname" = rc.userEditFirstName,			"lastname" = rc.userEditLastName,			"jobtitle" = rc.jobtitle,			"description" = rc.description,			"userId" = rc.currentUser.userId		}>		<cfset rc.object = editedUserObj>		<!--- Send the edited user object to the database--->		<cfset user.updateUser(editedUserObj)>		<!---Overwrite the current user with the one we just made --->		<cfset updatedUserQuery = user.getUser(rc.currentUser.userId)>		<cfset getPlugin("applicationstorage").setVar("currentuser", updatedUserQuery)>				<cfset getPlugin("messagebox").setMessage("info", "Profile was changed")>				<!---All this data is now saved in the rc, so load the profile--->		<cfset this.loadProfile(event)>				</cffunction>			<cffunction name="newProjectPage" returntype="void" output="false" hint="This function is used to load the New Project Page.">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>		<cfset rc.currentUser = getPlugin("applicationstorage").getVar("currentuser")>					<cfset rc.pageTitle = "Hood - Create a New Project">		<cfset rc.message = "Welcome to the new project page!">		<cfset rc.appstorage = getPlugin("applicationstorage").getStorage()>		<cfset rc.uniqueId = createUUID()>					<cfset event.setView("newproject")>			</cffunction>		<cffunction name="logout" returntype="void" output="false" hint="This function is used to log the user out.">		<cfargument name="event" required="true">		<cfset var rc = event.getCollection()>				<!---<cfset APPLICATION.Session.loggedin = 0>		<cfset APPLICATION.Session.currentUser = ''>		<cfset rc.currentUser = ''>--->		<cfset getPlugin("applicationstorage").clearAll()>				<cfset rc.pageTitle = "Hood - Online web portfolio hosting and sharing at your fingertips">		<cfset rc.message = "Welcome to the Hood.">					<cfif getPlugin("applicationstorage").exists("loggedin")>			<cfset rc.doesitexist = "Exists">		<cfelse>			<!---if a variable called loggedin doesn't exist, make one --->			<cfset rc.doesitexist = "Doesn't Exist">			<cfset getPlugin("applicationstorage").setVar("loggedin", 0)>		</cfif>				<cfset rc.appstorage = getPlugin("applicationstorage").getStorage()>					<cfset event.setView("landing")>				</cffunction>							<!------------------------------------------- PRIVATE EVENTS ------------------------------------------>
</cfcomponent>